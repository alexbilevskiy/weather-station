version: '3.9'
services:
  traefik:
    container_name: traefik
    image: traefik:v2.10
    command:
      - "--configFile=/etc/traefik/traefik.yml"
    extra_hosts:
      - host.docker.internal:${INT_IP}
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    labels:
      - "traefik.enable=true"

      - "traefik.http.middlewares.dashboard_stripprefix.stripprefix.prefixes=/traefik"
      - "traefik.http.middlewares.dashboard_stripprefix.stripprefix.forceslash=true"

      - "traefik.http.routers.dashboard.rule=PathPrefix(`/traefik`) || (PathPrefix(`/api`) && Headers(`Referer`, `https://${HOST}/traefik/dashboard/`))"
      - "traefik.http.routers.dashboard.entrypoints=web,websecure"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.middlewares=test-ipwhitelist@file,dashboard_stripprefix"

      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.tls.certresolver=myresolver"
      - "traefik.http.routers.dashboard.tls.domains[0].main=${HOST}"
    volumes:
      - /opt/docker-data/traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - /opt/docker-data/traefik/dyn:/etc/traefik/dyn:ro
      - /opt/docker-data/traefik/acme.json:/acme.json
      - /var/run/docker.sock:/var/run/docker.sock

  whoami:
    image: traefik/whoami
    container_name: traefik-whoami
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=PathPrefix(`/whoami`)"
      - "traefik.http.routers.whoami.entrypoints=web,websecure"

      - "traefik.http.routers.whoami.tls=true"
      - "traefik.http.routers.whoami.tls.certresolver=myresolver"
      - "traefik.http.routers.whoami.tls.domains[0].main=${HOST}"

  homeassistant:
    container_name: homeassistant
    image: "ghcr.io/home-assistant/home-assistant:stable"
    ports:
      - "8123:8123"
    labels:
      - "traefik.enable=true"
      # sadly, home assistant does not support working under custom path
      # TODO: specify all possible hass path variants
      - "traefik.http.routers.hass.rule=PathPrefix(`/`)"
      - "traefik.http.routers.hass.priority=0"
      - "traefik.http.routers.hass.entrypoints=web,websecure"

      - "traefik.http.routers.hass.middlewares=test-ipwhitelist@file"

      - "traefik.http.routers.hass.tls=true"
      - "traefik.http.routers.hass.tls.certresolver=myresolver"
      - "traefik.http.routers.hass.tls.domains[0].main=${HOST}"

      - "traefik.http.services.hass.loadbalancer.server.port=8123"
    volumes:
      - /opt/docker-data/homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
      - /run/dbus:/run/dbus:ro
    restart: unless-stopped
    # this is required for some zeroconf integrations
    network_mode: host
    depends_on:
      - mosquitto

  zigbee2mqtt:
    container_name: zigbee2mqtt
    image: koenkk/zigbee2mqtt:latest
    ports:
      - "8546:8546"
    labels:
      - "traefik.enable=true"

      - "traefik.http.middlewares.z2m_basicauth.basicauth.users=${BASICAUTH}"

      - "traefik.http.middlewares.z2m_stripprefix.stripprefix.prefixes=/z2m"
      - "traefik.http.middlewares.z2m_stripprefix.stripprefix.forceslash=true"

      - "traefik.http.routers.z2m_byip.rule=PathPrefix(`/z2m/`) && ClientIP(${WHITELIST_IP})"
      - "traefik.http.routers.z2m_byip.entrypoints=web,websecure"
      - "traefik.http.routers.z2m_byip.middlewares=test-ipwhitelist@file,z2m_stripprefix"

      - "traefik.http.routers.z2m_default.rule=PathPrefix(`/z2m/`)"
      - "traefik.http.routers.z2m_default.entrypoints=web,websecure"
      - "traefik.http.routers.z2m_default.middlewares=z2m_basicauth,z2m_stripprefix"

      - "traefik.http.routers.z2m_byip.tls=true"
      - "traefik.http.routers.z2m_byip.tls.certresolver=myresolver"
      - "traefik.http.routers.z2m_byip.tls.domains[0].main=${HOST}"

      - "traefik.http.routers.z2m_default.tls=true"
      - "traefik.http.routers.z2m_default.tls.certresolver=myresolver"
      - "traefik.http.routers.z2m_default.tls.domains[0].main=${HOST}"

      - "traefik.http.services.z2m.loadbalancer.server.port=8546"
    volumes:
      - /opt/docker-data/zigbee2mqtt:/app/data
      - /run/udev:/run/udev:ro
    environment:
      - TZ=Europe/Moscow
    restart: unless-stopped
    devices:
      - /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0:/dev/ttyUSB0
    depends_on:
      - mosquitto

  mktxp:
    container_name: mktxp
    image: ghcr.io/akpw/mktxp:latest
    volumes:
      - /opt/docker-data/mktxp:/root/mktxp/
    restart: unless-stopped
    network_mode: host
    user: root

  portainer:
    container_name: portainer
    image: portainer/portainer-ce:linux-arm
    ports:
      - "9000:9000"
    labels:
      - "traefik.enable=true"

      - "traefik.http.middlewares.portainer_stripprefix.stripprefix.prefixes=/portainer"
      - "traefik.http.middlewares.portainer_stripprefix.stripprefix.forceslash=false"

      - "traefik.http.routers.portainer.rule=PathPrefix(`/portainer`)"
      - "traefik.http.routers.portainer.entrypoints=web,websecure"
      - "traefik.http.routers.portainer.middlewares=test-ipwhitelist@file,portainer_stripprefix"

      - "traefik.http.routers.portainer.tls=true"
      - "traefik.http.routers.portainer.tls.certresolver=myresolver"
      - "traefik.http.routers.portainer.tls.domains[0].main=${HOST}"

      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/docker-data/portainer:/data

  mosquitto:
    container_name: mosquitto
    image: eclipse-mosquitto
    restart: unless-stopped
    network_mode: host
    privileged: true
    volumes:
      - /opt/docker-data/mosquitto/config:/mosquitto/config
      - /opt/docker-data/mosquitto/data:/mosquitto/data
      - /opt/docker-data/mosquitto/log:/mosquitto/log

  grafana:
    container_name: grafana
    image: grafana/grafana-oss
    ports:
      - "3000:3000"
    labels:
      - "traefik.enable=true"

      - "traefik.http.middlewares.grafana_stripprefix.stripprefix.prefixes=/grafana"
      - "traefik.http.middlewares.grafana_stripprefix.stripprefix.forceslash=false"

      - "traefik.http.routers.grafana.rule=PathPrefix(`/grafana`)"
      - "traefik.http.routers.grafana.entrypoints=web,websecure"
      - "traefik.http.routers.grafana.middlewares=test-ipwhitelist@file,grafana_stripprefix"

      - "traefik.http.routers.grafana.tls=true"
      - "traefik.http.routers.grafana.tls.certresolver=myresolver"
      - "traefik.http.routers.grafana.tls.domains[0].main=${HOST}"

      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
    restart: unless-stopped
    volumes:
      - /opt/docker-data/grafana/config:/etc/grafana
      - /opt/docker-data/grafana/data:/var/lib/grafana

  memcached:
    container_name: memcached
    image: memcached
    network_mode: host
    restart: unless-stopped

  nginx:
    image: umputun/nginx-le:latest
    ports:
      - "81:80"
      - "4443:443"
    restart: always
    container_name: nginx
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"
    volumes:
      - /opt/docker-data/nginx-le/ssl:/etc/nginx/ssl
      - /opt/docker-data/nginx-le/services/pi.conf:/etc/nginx/service.conf
      - /opt/docker-data/nginx-le/confs/hass.conf:/etc/nginx/hass.conf
      - /opt/docker-data/nginx-le/confs/acl.conf:/etc/nginx/acl.conf
    environment:
      - TZ=Europe/Moscow
    env_file:
      - nginx.env

  frigate:
    container_name: frigate
    privileged: true
    restart: unless-stopped
    image: ghcr.io/blakeblackshear/frigate:stable
    ports:
      - "5000:5000"
    labels:
      - "traefik.enable=true"

      # TODO: does not fully work: https://github.com/blakeblackshear/frigate/issues/4526
      - "traefik.http.middlewares.frigate_stripprefix.stripprefix.prefixes=/frigate"
      - "traefik.http.middlewares.frigate_stripprefix.stripprefix.forceslash=false"
      - "traefik.http.middlewares.frigate_headers.headers.customrequestheaders.X-Ingress-Path=/frigate"

      - "traefik.http.routers.frigate.rule=PathPrefix(`/frigate`)"
      - "traefik.http.routers.frigate.entrypoints=web,websecure"
      - "traefik.http.routers.frigate.middlewares=test-ipwhitelist@file,frigate_stripprefix,frigate_headers"

      - "traefik.http.routers.frigate.tls=true"
      - "traefik.http.routers.frigate.tls.certresolver=myresolver"
      - "traefik.http.routers.frigate.tls.domains[0].main=${HOST}"

      - "traefik.http.services.frigate.loadbalancer.server.port=5000"
    shm_size: "256mb"
    devices:
      - /dev/bus/usb/002/003:/dev/bus/usb/002/003
      - /dev/bus/usb/002/002:/dev/bus/usb/002/002
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /opt/docker-data/frigate/config:/config
      - /opt/docker-data/frigate/ffmpeg-n5.1.3-16-g566aa38d98-linuxarm64-gpl-5.1:/usr/lib/btbn-ffmpeg:ro
      - /media/E/frigate:/media/frigate
      - /opt/docker-data/frigate/db/:/media/db/
      - type: tmpfs
        target: /tmp/cache
        tmpfs:
          size: 1000000000
    environment:
      FRIGATE_RTSP_PASSWORD: "password"

#  frigate_exporter:
#    container_name: frigate_exporter
#    restart: unless-stopped
#    image: rhysbailey/prometheus-frigate-exporter
#    network_mode: host
#    environment:
#      FRIGATE_STATS_URL: "http://192.168.88.209:5000/api/stats"
