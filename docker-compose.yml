version: '3.9'
services:
  homeassistant:
    container_name: homeassistant
    image: "ghcr.io/home-assistant/home-assistant:stable"
    volumes:
      - /opt/docker-data/homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
      - /run/dbus:/run/dbus:ro
    restart: unless-stopped
    privileged: true
    network_mode: host
    depends_on:
      - mosquitto

  zigbee2mqtt:
    container_name: zigbee2mqtt
    image: koenkk/zigbee2mqtt:latest-dev
    volumes:
      - /opt/docker-data/zigbee2mqtt:/app/data
      - /run/udev:/run/udev:ro
    environment:
      - TZ=Europe/Moscow
    restart: unless-stopped
    devices:
      - /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0:/dev/ttyUSB0
    network_mode: host
    depends_on:
      - mosquitto

  mktxp:
    container_name: mktxp
    image: ghcr.io/akpw/mktxp:latest
    volumes:
      - /opt/docker-data/mktxp:/root/mktxp/
    restart: unless-stopped
    network_mode: host
    user: root

  portainer:
    container_name: portainer
    image: portainer/portainer-ce:linux-arm
    restart: unless-stopped
    network_mode: host
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/docker-data/portainer:/data

  mosquitto:
    container_name: mosquitto
    image: eclipse-mosquitto
    restart: unless-stopped
    network_mode: host
    privileged: true
    volumes:
      - /opt/docker-data/mosquitto/config:/mosquitto/config
      - /opt/docker-data/mosquitto/data:/mosquitto/data
      - /opt/docker-data/mosquitto/log:/mosquitto/log

  grafana:
    container_name: grafana
    image: grafana/grafana-oss
    restart: unless-stopped
    network_mode: host
    volumes:
      - /opt/docker-data/grafana/config:/etc/grafana
      - /opt/docker-data/grafana/data:/var/lib/grafana

  memcached:
    container_name: memcached
    image: memcached
    network_mode: host
    restart: unless-stopped

  nginx:
    image: umputun/nginx-le:latest
    restart: always
    container_name: nginx
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"
    network_mode: host
    volumes:
      - /opt/docker-data/nginx-le/ssl:/etc/nginx/ssl
      - /opt/docker-data/nginx-le/services/pi.conf:/etc/nginx/service.conf
      - /opt/docker-data/nginx-le/confs/hass.conf:/etc/nginx/hass.conf
      - /opt/docker-data/nginx-le/confs/acl.conf:/etc/nginx/acl.conf
    environment:
      - TZ=Europe/Moscow
    env_file:
      - nginx.env

  frigate:
    container_name: frigate
    privileged: true
    restart: unless-stopped
    image: ghcr.io/blakeblackshear/frigate:stable
    shm_size: "256mb"
    network_mode: host
    devices:
      - /dev/bus/usb/002/003:/dev/bus/usb/002/003
      - /dev/bus/usb/002/002:/dev/bus/usb/002/002
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /opt/docker-data/frigate/config:/config
      - /opt/docker-data/frigate/ffmpeg-n5.1.3-16-g566aa38d98-linuxarm64-gpl-5.1:/usr/lib/btbn-ffmpeg:ro
      - /media/E/frigate:/media/frigate
      - /opt/docker-data/frigate/db/:/media/db/
      - type: tmpfs
        target: /tmp/cache
        tmpfs:
          size: 1000000000
    environment:
      FRIGATE_RTSP_PASSWORD: "password"

#  frigate_exporter:
#    container_name: frigate_exporter
#    restart: unless-stopped
#    image: rhysbailey/prometheus-frigate-exporter
#    network_mode: host
#    environment:
#      FRIGATE_STATS_URL: "http://192.168.88.209:5000/api/stats"
